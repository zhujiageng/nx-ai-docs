{
  "name": "application",
  "factory": "./src/generators/application/application",
  "schema": {
    "$schema": "http://json-schema.org/schema",
    "cli": "nx",
    "$id": "SchematicsNxNodeApp",
    "title": "Nx Application Options Schema",
    "description": "Nx Application Options Schema.",
    "type": "object",
    "properties": {
      "name": {
        "description": "The name of the application.",
        "type": "string",
        "$default": { "$source": "argv", "index": 0 },
        "x-prompt": "What name would you like to use for the node application?",
        "x-priority": "important"
      },
      "directory": {
        "description": "The directory of the new application.",
        "type": "string",
        "x-priority": "important"
      },
      "skipFormat": {
        "description": "Skip formatting files",
        "type": "boolean",
        "default": false,
        "x-priority": "internal"
      },
      "skipPackageJson": {
        "type": "boolean",
        "default": false,
        "description": "Do not add dependencies to `package.json`.",
        "x-priority": "internal"
      },
      "linter": {
        "description": "The tool to use for running lint checks.",
        "type": "string",
        "enum": ["eslint"],
        "default": "eslint"
      },
      "unitTestRunner": {
        "type": "string",
        "enum": ["jest", "none"],
        "description": "Test runner to use for unit tests.",
        "default": "jest"
      },
      "tags": {
        "type": "string",
        "description": "Add tags to the application (used for linting)."
      },
      "frontendProject": {
        "type": "string",
        "description": "Frontend project that needs to access this application. This sets up proxy configuration.",
        "x-priority": "important"
      },
      "swcJest": {
        "type": "boolean",
        "description": "Use `@swc/jest` instead `ts-jest` for faster test compilation.",
        "default": false
      },
      "babelJest": {
        "type": "boolean",
        "description": "Use `babel` instead `ts-jest`.",
        "default": false,
        "x-deprecated": "Use --swcJest instead for faster compilation"
      },
      "pascalCaseFiles": {
        "type": "boolean",
        "description": "Use pascal case file names.",
        "alias": "P",
        "default": false
      },
      "js": {
        "type": "boolean",
        "description": "Generate JavaScript files rather than TypeScript files.",
        "default": false
      },
      "setParserOptionsProject": {
        "type": "boolean",
        "description": "Whether or not to configure the ESLint `parserOptions.project` option. We do not do this by default for lint performance reasons.",
        "default": false
      },
      "standaloneConfig": {
        "description": "Split the project configuration into `<projectRoot>/project.json` rather than including it inside `workspace.json`.",
        "type": "boolean",
        "default": true,
        "x-deprecated": "Nx only supports standaloneConfig"
      },
      "bundler": {
        "description": "Bundler which is used to package the application",
        "type": "string",
        "enum": ["esbuild", "webpack"],
        "default": "esbuild",
        "x-priority": "important"
      },
      "framework": {
        "description": "Generate the node application using a framework",
        "type": "string",
        "enum": ["express", "fastify", "koa", "nest", "none"],
        "default": "none",
        "x-prompt": "Which framework do you want to use?",
        "x-priority": "important"
      },
      "port": {
        "description": "The port which the server will be run on",
        "type": "number",
        "default": 3000
      },
      "rootProject": {
        "description": "Create node application at the root of the workspace",
        "type": "boolean",
        "default": false,
        "hidden": true,
        "x-priority": "internal"
      },
      "e2eTestRunner": {
        "type": "string",
        "enum": ["jest", "none"],
        "description": "Test runner to use for end to end (e2e) tests",
        "default": "jest"
      },
      "docker": {
        "type": "boolean",
        "description": "Add a docker build target"
      }
    },
    "required": ["name"],
    "presets": []
  },
  "aliases": ["app"],
  "x-type": "application",
  "description": "Create a node application.",
  "implementation": "/packages/node/src/generators/application/application.ts",
  "hidden": false,
  "path": "/packages/node/src/generators/application/schema.json",
  "type": "generator"
}
